openapi: 3.0.0
info:
  title: Credit Jambo Client API
  version: "1.0.0"
  description: API for client authentication, savings deposits, withdrawals and transaction tracking.

servers:
  - url: http://localhost:5002/api
    description: Local Development Server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # ---------------- AUTH ----------------
    RegisterUser:
      type: object
      required: [name, email, password]
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string

    LoginUser:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    AuthResponse:
      type: object
      properties:
        message:
          type: string
        token:
          type: string

    # ---------------- SAVINGS ----------------
    TransactionRequest:
      type: object
      required: [amount]
      properties:
        amount:
          type: number
          minimum: 0.01
        description:
          type: string

    TransactionResponse:
      type: object
      properties:
        message:
          type: string
        transaction:
          type: object
          properties:
            id:
              type: integer
            type:
              type: string
              enum: [deposit, withdraw]
            amount:
              type: number
            description:
              type: string
            userId:
              type: integer
            userName:
              type: string
            oldBalance:
              type: number
            newBalance:
              type: number
            accountNumber:
              type: string
            deviceId:
              type: string
            createdAt:
              type: string
              format: date-time
        account:
          type: object
          properties:
            account_number:
              type: string
            balance:
              type: number

    PaginatedTransactionsResponse:
      type: object
      properties:
        pagination:
          type: object
          properties:
            page:
              type: integer
            limit:
              type: integer
            total:
              type: integer
            totalPages:
              type: integer
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/TransactionResponse/properties/transaction"

tags:
  - name: Auth
    description: Authentication & user identity routes
  - name: Savings
    description: Deposit, withdrawal, and financial transactions
  - name: Admin
    description: Admin-only routes

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUser"
      responses:
        "201":
          description: Registration successful
        "400":
          description: Email already exists

  /auth/login:
    post:
      summary: User login with JWT issuance
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUser"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"

  /savings/deposit:
    post:
      summary: Deposit money
      tags: [Savings]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRequest"
      responses:
        "200":
          description: Deposit successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"

  /savings/withdraw:
    post:
      summary: Withdraw money
      tags: [Savings]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRequest"
      responses:
        "200":
          description: Withdrawal successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"

  /savings/transactions:
    get:
      summary: Get user transaction history with pagination
      tags: [Savings]
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        "200":
          description: List of transactions with pagination data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedTransactionsResponse"

  /users:
    get:
      summary: Get all users (ADMIN ONLY)
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of all users
        "403":
          description: Forbidden - Admin access required
