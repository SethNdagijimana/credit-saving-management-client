openapi: 3.0.0
info:
  title: Credit Jambo Client API
  version: 1.1.0
  description: >
    Credit Jambo Client API allows users to register, log in, deposit, withdraw,
    and view transaction history. It also supports notification retrieval and
    marking as read.
servers:
  - url: "http://localhost:5002/api"
    description: Local Development Server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    deviceHeader:
      type: apiKey
      in: header
      name: x-device-id
      description: Unique identifier for the user's device.
  schemas:
    RegisterUser:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
    LoginUser:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
          nullable: true
        deviceId:
          type: string
        user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            email:
              type: string
            phone_number:
              type: string
            verified:
              type: boolean
            account_number:
              type: string
            balance:
              type: string
    TransactionRequest:
      type: object
      required:
        - amount
      properties:
        amount:
          type: number
          example: 5000
        description:
          type: string
          example: Monthly deposit
        method:
          type: string
          enum:
            - bank_transfer
            - instant_transfer
            - atm
        pin:
          type: string
          example: "1234"
    Transaction:
      type: object
      properties:
        id:
          type: integer
          example: 12
        type:
          type: string
          enum:
            - deposit
            - withdraw
        amount:
          type: number
          example: 5000
        description:
          type: string
          example: Deposit from mobile app
        userId:
          type: integer
        userName:
          type: string
        oldBalance:
          type: number
        newBalance:
          type: number
        accountNumber:
          type: string
        deviceId:
          type: string
        createdAt:
          type: string
          format: date-time
    TransactionResponse:
      type: object
      properties:
        message:
          type: string
          example: Deposit successful
        transaction:
          $ref: "#/components/schemas/Transaction"
        account:
          type: object
          properties:
            account_number:
              type: string
            balance:
              type: number
    PaginatedTransactionsResponse:
      type: object
      properties:
        pagination:
          type: object
          properties:
            page:
              type: integer
              example: 1
            limit:
              type: integer
              example: 10
            total:
              type: integer
              example: 50
            totalPages:
              type: integer
              example: 5
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/Transaction"
    Notification: null
  type: object
  properties:
    id:
      type: integer
    user_id:
      type: integer
    type:
      type: string
      example: withdraw
    message:
      type: string
      example: "Your withdrawal of RWF 10,000 was successful."
    is_read:
      type: boolean
    created_at:
      type: string
      format: date-time
tags:
  - name: Auth
    description: Authentication & user identity routes
  - name: Savings
    description: "Deposit, withdrawal, and transaction operations"
  - name: Notifications
    description: User notification endpoints
  - name: Admin
    description: Admin-only routes
paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUser"
      responses:
        "201":
          description: Registration successful
        "400":
          description: Email already exists
  /auth/login:
    post:
      summary: User login and JWT issuance
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUser"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /savings/deposit:
    post:
      summary: Deposit money into your account
      tags:
        - Savings
      security:
        - bearerAuth: []
        - deviceHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRequest"
      responses:
        "200":
          description: Deposit successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"
  /savings/withdraw:
    post:
      summary: Withdraw money from your account
      tags:
        - Savings
      security:
        - bearerAuth: []
        - deviceHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRequest"
      responses:
        "200":
          description: Withdrawal successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"
  /savings/transactions:
    get:
      summary: Get paginated transaction history
      tags:
        - Savings
      security:
        - bearerAuth: []
        - deviceHeader: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        "200":
          description: Paginated transactions list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedTransactionsResponse"
  /notifications:
    get:
      summary: Get all notifications for logged-in user
      tags:
        - Notifications
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User notifications
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationsResponse"
  /mark-read:
    patch:
      summary: Mark all notifications as read
      tags:
        - Notifications
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Notifications marked as read
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Notifications marked as read
  /users:
    get:
      summary: Get all users (Admin only)
      tags:
        - Admin
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of all users
        "403":
          description: Forbidden - Admin access required
